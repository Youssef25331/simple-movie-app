$primary: #630963;
$lighter: #353c40;
$dark: #0e1011;
$darker: #000;
$white: #fffff0;
$offwhite: #787878;
$card-trainsion: 0.5s;

@import "~bootstrap/scss/bootstrap";
@import "react-multi-carousel/lib/styles.css";

.transparent-navbar {
  background-color: transparent !important;
  padding: 0;
  margin: 0;
  height: 0px;

}

.fa-icon {
  color: white;
  transition: 0.3s;

  &:hover {
    color: #c1bfc1;
    cursor: pointer;
  }
}

.wide {
  &>* {
    max-width: 20px;
  }
}

body {
  background-color: $darker;
}

h2 {
  color: white;
}

.custom-arrow {
  transition: all 0.5s;

  @include media-breakpoint-up(md) {
    width: 9%;
  }

  @include media-breakpoint-up(lg) {
    width: 8%;
  }

  width: 13%;
  height: calc(100% - 16vh);
  background: linear-gradient(90deg,
    rgba(0, 0, 0, 1) 0%,
    rgba(0, 0, 0, 0.75) 50%,
    rgba(0, 0, 0, 0) 100%);

  &:hover {
    cursor: pointer;
    opacity: 0.7;
  }

  &-right {
    @extend .custom-arrow;
    background: linear-gradient(270deg,
        rgba(0, 0, 0, 1) 0%,
        rgba(0, 0, 0, 0.75) 50%,
        rgba(0, 0, 0, 0) 100%);
  }
}

.carousel-container {
  /*   padding to fix hover overflow scroll issue  */
  padding: 8vh 0px;
  overflow-y: visible;
  margin-top: -4vh;
  margin-bottom: -10vh;

  .card-image {
    height: 100%;
  }

  li {
    transition: 0.3s ease-in-out;

    &:hover {
      .custom-arrow {
        display: none;
      }

      z-index: 100 !important;
      cursor: pointer;
      transform: scale(1.2);
    }
  }
}

.overlay {
  position: relative;

  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(180deg,
        rgba(0, 0, 0, 0) 0%,
        rgba(0, 0, 0, 0.6022058481595763) 50%,
        rgba(0, 0, 0, 1) 100%);
    opacity: 1;
  }
}

.hero-details-container {
  width: 50%;
  top: 8%;
  left: 4vw;

  * {
    display: none;
  }

  @include media-breakpoint-up(sm) {
    * {
      display: block;
    }
  }

  @include media-breakpoint-up(lg) {
    top: 20%;
  }
}

.hero-name {
  font-family: bebasregular, Arial, Helvetica, sans-serif;
  text-transform: uppercase;
  text-shadow: 2px 2px 8px $dark;
  color: $white;
  font-size: 1.7rem;

  @include media-breakpoint-up(md) {
    font-size: 2.5rem;
  }

  @include media-breakpoint-up(lg) {
    font-size: 4rem;
  }
}

.hero-details {
  color: $white;
  font-weight: 300;

  @include media-breakpoint-up(sm) {
    display: block;

    font-size: 10px;
  }

  @include media-breakpoint-up(md) {
    font-size: 12px;
  }

  @include media-breakpoint-up(lg) {
    width: 40vw;
    font-size: 14px;
  }
}

a {
  text-decoration: none !important;

  .hero-button {
    box-shadow: 2px 2px 8px $darker;
    width: 100px;

    @include media-breakpoint-up(md) {
      width: 200px;
    }
  }
}

.carousels-container {
  margin-top: -20%;
}

.search-container {
  max-width: 1390px;
}

.search-bar,
.filter-button {
  height: 48px;
  background-color: $darker;
  color: $white;

  &::placeholder {
    color: $offwhite;
  }

  &:focus {
    background-color: $darker;
    color: $white;
  }
}

.discover-container {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
  grid-gap: 16px;

  .card-image {
    height: 100%;
    width: 100%;
    transition: $card-trainsion;
    background-color: #35383f;
    background-size: 100% 100%;
    background-repeat: no-repeat;
    background-position: center;
    aspect-ratio: 2/3;
  }
}

.card-overlay {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  transition: $card-trainsion;
}

.card-container {
  &:hover {
    .card-image {
      background-size: 105% 105%;
    }

    .card-title {
      color: $primary !important;
    }

    .card-overlay {
      background-color: rgba(0, 0, 0, 0.5);
    }
  }
}

.card-title {
  color: $white;
  font-size: 1.2rem;
  font-weight: 500;
  transition: $card-trainsion;
}

.modal-content {
  background-color: $dark;
  color: $white;
}

.accordion-item {
  background-color: $dark;
  color: $white;

  .accordion-button {
    background-color: $dark;
    color: white;

    &:not(.collapsed) {
      background-color: $lighter;
    }
  }
}
